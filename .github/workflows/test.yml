name: Code Quality & Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create local.properties
      run: echo "sdk.dir=/usr/local/lib/android/sdk" > local.properties

    - name: Run Android lint
      run: ./gradlew lint --no-daemon --stacktrace

    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --no-daemon --stacktrace

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: |
          app/build/reports/lint-results-debug.html
          app/build/reports/lint-results-debug.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/test-results/

    - name: Comment test results on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          let comment = '## üß™ Code Quality & Test Results\n\n';
          
          const fs = require('fs');
          
          // Check if build was successful
          if ('${{ job.status }}' === 'success') {
            comment += '‚úÖ **All tests passed!**\n\n';
          } else {
            comment += '‚ùå **Some issues found**\n\n';
          }
          
          comment += '### Test Coverage:\n';
          comment += '- Unit tests completed\n';
          comment += '- Android lint checks performed\n';
          comment += '- Code quality analysis completed\n\n';
          
          comment += '### Download Reports:\n';
          comment += '- Check the Actions artifacts for detailed test and lint reports\n\n';
          comment += '### Next Steps:\n';
          comment += '- Review any lint warnings or test failures\n';
          comment += '- Ensure all security features are properly tested\n';
          comment += '- Verify UI components follow Material Design 3 guidelines';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });